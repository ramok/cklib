#! ~/eggdrop/eggdrop

encoding system iso8859-1
addlang "english"
addlang "russian"

###---------------------
### Ident
###---------------------

## irc-ident
set botnet-nick "LlamaBot"
set username "lamest"
set network "lamenetwork"
set owner "MrLame, MrsLame";                      # list of owners
set admin "Lamer <email: lamer@lamest.lame.org>"; # just for banner
set nick "Lamestbot"
set altnick "Llamab?t"
set realname "/msg LamestBot hello"

set default-port 6667
set servers {
  you.need.to.change.this:6667
  another.example.com:7000:password
}
set net-type 5;       # 0:EFnet 1:IRCnet 2:Undernet 3:DALnet 4:+e/+I/max-modes 20 Hybrid 5:Other
set stack-limit 4;    # how allow recipients per command
#set check-mode-r 1;  # +r means "restricted" mode
set nick-len 32;      # max nick length

## time-zone and time offset
set timezone "EST"
set offset "5"
set env(TZ) "$timezone $offset"
## for vhosts
#set my-hostname "virtual.host.com"
#set my-ip "99.99.0.0"
#set nat-ip "127.0.0.1";              # NAT ip
#set firewall "!sun-barr.ebay:3666";  # socks firewall
#set reserved-portrange 2010:2020;    # port range for dcc/transfer
listen 3333 all

###-------------------
### Logs
###-------------------

set max-logsize 0;            # max logsize in kb (0 - disable)
set max-logs 5;               # max number of logs
set quick-logs 0;             # (bool) flush log to disk every time
set raw-log 0;                # (bool) allow "raw" logs
set log-time 1;               # (bool) use timestamp in logs
set keep-all-logs 0;          # (bool) use YYMMDD to log files and keep it forever
set logfile-suffix ".%d%b%Y"; # suffix for logs when "keep-all-logs" sets
set switch-logfiles-at 345;   # time for switch logs (3:45am)
set quiet-save 1;             # (bool) no messages when save chan/user files

###--------------------
### Files
###--------------------

set help-path "help/"
set text-path "text/"
set mod-path  "modules/"
set temp-path [expr {[file writable /tmp]?{/tmp}:{tmp}}]
#set motd         "text/motd"
#set telnet-banner "text/banner"
set motd          ""
set telnet-banner ""

file mkdir bots
logfile mco * "logs/${botnet-nick}.log"
#logfile jpk #lamest "logs/lamest.log"
set userfile "bots/${botnet-nick}.user"
set pidfile  "pid.${botnet-nick}"
set chanfile "bots/${botnet-nick}.chan"

###--------------------
### Trash
###--------------------

set flood-msg 5:60
set flood-ctcp 3:60
set trigger-on-ignore 0;      # (bool) trigger binds for ignored users
set max-queue-msg 300;        # max queue size
set double-mode 1;            # -.
set double-server 1;          #  | allow repeated messages in queue
set double-help 1;            # -'
set ignore-time 15;           # time (minutes) for temporary ignores
set default-flags "h";        # default new user flags
set console "";               # default console flags
set console-autosave 1;       # autosave console flags
set whois-fields "url birthday phone"
set notify-newusers "$owner"; # notify when new users learned
set hourly-updates 17;        # hourly update user/chanfile every XX:17
set sort-users 0;             # sort userfile when save
set must-be-owner 1;          # user must be owner for .tcl/.set
set userfile-perm 0600;       # permissions for user/chan files
set die-on-sighup 0;          # (bool) die on kill -1
set die-on-sigterm 1;         # (bool) die on kill -15
set remote-boots 1;           #
set allow-dk-cmds 1;          # +d/+k users hit in -|- mask
set share-unlinks 1;          #
set protect-telnet 0;         # (bool) check host for telnet connect
set dcc-sanitycheck 0;        # (bool) ignore bad dcc-chat request (some mircs tends to do)
set ident-timeout 5;          # ident timeout for telnet/dcc (secs)
set connect-timeout 15;       # connect timeout for telnet/dcc (secs)
set resolve-timeout 15;       # timeout for resolve hostname/ip
set require-p 1;              # (bool) is +o users require +p flag for dcc
set open-telnets 0;           # (bool) allow learn new users in telnet (like 'hello', but 'NEW')
set stealth-telnets 1;        # (bool) don't identify yourself as eggdrop in telnet banner
set use-telnet-banner 0;      # (bool) use telnet banner (set telnet-banner)
set dcc-flood-thr 3;          # how many messages allow on partyline in 1 sec
set paranoid-telnet-flood 0;  # apply 'dcc-flood-thr' to a +f users too
set telnet-flood 3:90;        # who many connection from one host
set max-dcc 50;               # max dcc connections
set dupwait-timeout 60;       # seconds to restore botnet link
set force-expire 0;           # expire bans not sets by bot
set share-greet 0;            # share greets with shared bots
set use-info 1;               # allow users store info-line
set keep-nick 1;              # try get primary nick
set strict-host 0;            # (bool) don't strip ~ from host
set quiet-reject 1;           # (bool) don't message user if dcc-chat rejected
set lowercase-ctcp 1;         # (bool) answer on lowercase dcc request
set answer-ctcp 3;            # how many dcc request answered at once.
set never-give-up 1;          # try to connect server forever
set server-cycle-wait 0;      # how seconds bot wait before reconnect server
set server-timeout 60;        # timeout in secs for connection to server
set servlimit 0;              # join next server if serv-count in net less than
set check-stoned 1;           # check is server is die but not notify bot
set serverror-quit 1;         # quit from server when ERROR recivied
set optimize-kicks 1;         # optimize kick queue
set ctcp-mode 2;              # 0 - normal/1 - no ctcp/2 - limit by 'flood-ctcp'
set irc_encoding cp1251;      #

unbind dcc n simul *dcc:simul
bind dcc n tcl *dcc:tcl
bind dcc n set *dcc:set

after idle { foreach {k v} {
global-flood-chan 10:60
global-flood-deop 3:10
global-flood-kick 3:10
global-flood-join 5:60
global-flood-ctcp 3:60
global-flood-nick 5:60
global-aop-delay 5:30
global-idle-kick 0
global-chanmode "nt"
global-stopnethack-mode 0
global-revenge-mode 0
global-ban-time 120
global-exempt-time 60
global-invite-time 60
global-chanset {
  -autoop -autovoice -autohalfop
  +protectops -protectfriends -protecthalfops
  +userbans +userexempts +userinvites
  +dynamicbans +dynamicexempts +dynamicinvites
  -enforcebans -nodesynch
  -revenge -revengebot -bitch +dontkickops
  -statuslog -secret +cycle -greet -inactive +shared -seen
}} { set ::$k $v } }

loadmodule dns
loadmodule channels
loadmodule server
loadmodule ctcp
loadmodule irc
#loadmodule transfer
loadmodule share
loadmodule compress
#loadmodule filesys
#loadmodule notes
loadmodule console
#loadmodule seen
loadmodule blowfish
#loadmodule assoc

catch { source scripts/ck.lib.tcl }
#::ck::source man
#::ck::source calc

